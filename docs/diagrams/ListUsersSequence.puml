@startuml
hide footbox
actor User as "User"
participant Ui as ":Ui"
participant LeBook as ":LeBook"
participant Parser as ":Parser"
participant ListOverdueUsersCommand as ":ListOverdueUsersCommand"
participant MemberManager as ":MemberManager"

User ->> Ui: readCommand()
Ui ->> LeBook: pass user input ("list overdue users")
LeBook ->> Parser: parse("list overdue users")
Parser ->> Parser: parseListCommand("overdue users")
Parser ->> ListOverdueUsersCommand: create ListOverdueUsersCommand
Parser -->> LeBook: return ListOverdueUsersCommand

LeBook ->> ListOverdueUsersCommand: execute(library, ui, storage, memberManager)
ListOverdueUsersCommand ->> MemberManager: listMembersWithOverdueBooks()

loop Iterate through members
    MemberManager ->> MemberManager: Check overdue books for each member
    alt If member has overdue books
        MemberManager ->> MemberManager: Add member to result list
    else No overdue books
        MemberManager ->> MemberManager: Skip member
    end
end

MemberManager -->> ListOverdueUsersCommand: Return formatted list of members with overdue books

ListOverdueUsersCommand ->> Ui: printWithSeparator(result)
Ui ->> User: Display list of members with overdue books
@enduml
